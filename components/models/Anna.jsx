/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Anna({ index, position, rotation }) {
  const { nodes, materials, animations } = useGLTF("/Character/Anna.glb");
  const { actions, ref, names } = useAnimations(animations);

  useEffect(() => {
    console.log(actions[names[index]]);
    // Reset and fade in animation after an index has been changed
    actions[names[index]].reset().fadeIn(0.5).play();
    // In the clean-up phase, fade it out
    return () => actions[names[index]].fadeOut(0.5);
  }, [index, actions, names]);

  return (
    <group ref={ref} position={position} dispose={null}>
      <group>
        <group rotation={rotation} scale={0.021}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            geometry={nodes.Ch03.geometry}
            material={materials.Ch03_Body}
            skeleton={nodes.Ch03.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/Character/Anna.glb");
